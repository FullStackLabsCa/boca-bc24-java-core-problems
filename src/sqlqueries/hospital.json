{"showTimer":false,"isDarkMode":false,"disableAds":false,"questionsSolved":[{"id":41,"skipped":false,"userSolution":"select * from admissions where admission_date=discharge_date;","hints":1,"solvedTime":79132551,"completedWithoutSkipping":true},{"id":42,"skipped":false,"userSolution":"select patient_id, count(*) from admissions where patient_id =579;","hints":1,"solvedTime":163002,"completedWithoutSkipping":true},{"id":32,"skipped":false,"userSolution":"select distinct  city from patients where province_id = 'NS';","hints":1,"solvedTime":233002,"completedWithoutSkipping":true},{"id":45,"skipped":false,"userSolution":"select first_name, last_name , birth_date from patients where height > 160 and weight > 70;","hints":2,"solvedTime":772004,"completedWithoutSkipping":true},{"id":7,"skipped":false,"userSolution":"select distinct  year(birth_date)  from patients order by birth_date asc;","hints":1,"solvedTime":282999,"completedWithoutSkipping":true},{"id":9,"skipped":false,"userSolution":"select patient_id, first_name from patients where first_name like 's____%s';","hints":3,"solvedTime":901661,"completedWithoutSkipping":true},{"id":10,"skipped":false,"userSolution":"select patients.patient_id, patients.first_name , patients.last_name from patients join admissions on patients.patient_id= admissions.patient_id where diagnosis='Dementia';","hints":1,"solvedTime":452351,"completedWithoutSkipping":true},{"id":11,"skipped":false,"userSolution":"select first_name from patients order by length(first_name), first_name;","hints":2,"solvedTime":285000,"completedWithoutSkipping":true},{"id":13,"skipped":false,"userSolution":"select first_name , last_name , allergies from patients where allergies= 'Penicillin' or allergies=  'Morphine'  order by allergies asc, first_name asc, last_name asc;","hints":1,"solvedTime":207001,"completedWithoutSkipping":true},{"id":14,"skipped":false,"userSolution":"select patient_id, diagnosis from admissions group by patient_id, diagnosis having  count (diagnosis=diagnosis)>1;","hints":2,"solvedTime":438995,"completedWithoutSkipping":true},{"id":15,"skipped":false,"userSolution":"select city , count(*) as num_patients from patients group by city order by  num_patients desc, city asc; ;","hints":3,"solvedTime":255000,"completedWithoutSkipping":true},{"id":16,"skipped":false,"userSolution":"select first_name , last_name, 'Patient' as role from patients\n union all\n select first_name, last_name , 'Doctor' AS role from doctors;","hints":2,"solvedTime":392999,"completedWithoutSkipping":true},{"id":22,"skipped":false,"userSolution":"select allergies, count(*) as total_diagnosis from patients where allergies is not null group by allergies order by total_diagnosis desc ;","hints":2,"solvedTime":543001,"completedWithoutSkipping":true},{"id":27,"skipped":false,"userSolution":"select first_name , last_name , birth_date from patients where year(birth_date) between 1970 and 1979 order by birth_date asc;\n ;","hints":2,"solvedTime":585000,"completedWithoutSkipping":true},{"id":28,"skipped":false,"userSolution":"select concat(Upper(last_name),',',lower(first_name)) as new_name_format from patients order by first_name desc;","hints":3,"solvedTime":455947,"completedWithoutSkipping":true},{"id":30,"skipped":false,"userSolution":"select  province_id , sum(height)as sum_height from patients group by province_id having sum(height) >=7000 ;","hints":3,"solvedTime":539994,"completedWithoutSkipping":true},{"id":31,"skipped":false,"userSolution":"select max(weight)- min(weight) as weight_delta from patients where last_name='Maroni';","hints":3,"solvedTime":841384,"completedWithoutSkipping":true},{"id":0,"skipped":false,"userSolution":"SELECT first_name,last_name,gender from patients where gender is 'M'","hints":1,"solvedTime":112000,"completedWithoutSkipping":false},{"id":1,"skipped":false,"userSolution":"select first_name,last_name from patients where allergies IS null;","hints":1,"solvedTime":142000,"completedWithoutSkipping":false},{"id":2,"skipped":false,"userSolution":"select first_name from patients where first_name like 'C%';","hints":1,"solvedTime":108000,"completedWithoutSkipping":false},{"id":3,"skipped":false,"userSolution":"select first_name, last_name from patients where weight  between 100 AND 120;","hints":3,"solvedTime":75000,"completedWithoutSkipping":false},{"id":4,"skipped":false,"userSolution":"update patients  SET allergies='NKA' where allergies IS null;","hints":2,"solvedTime":110999,"completedWithoutSkipping":false},{"id":5,"skipped":false,"userSolution":"select CONCAT(first_name,' ' ,last_name) AS full_name from patients ;","hints":1,"solvedTime":76999,"completedWithoutSkipping":false},{"id":6,"skipped":false,"userSolution":"select patients.first_name, patients.last_name,province_names.province_name from patients join province_names on patients.province_id= province_names.province_id;","hints":1,"solvedTime":95000,"completedWithoutSkipping":false},{"id":23,"skipped":false,"userSolution":"select count(*) as total_patients from patients where year(birth_date) is 2010 ;","hints":2,"solvedTime":108001,"completedWithoutSkipping":false},{"id":46,"skipped":false,"userSolution":"select first_name, last_name , allergies from patients where  city='Hamilton' and allergies is not null;","hints":2,"solvedTime":190003,"completedWithoutSkipping":false},{"id":34,"skipped":false,"userSolution":"select * from patients where patient_id in (1,45,534,879,1000);","hints":3,"solvedTime":67000,"completedWithoutSkipping":false},{"id":33,"skipped":false,"userSolution":"select first_name, last_name , Max(height) from patients having height","hints":1,"solvedTime":77000,"completedWithoutSkipping":false},{"id":35,"skipped":false,"userSolution":"select count(*) from admissions;","hints":1,"solvedTime":30001,"completedWithoutSkipping":false},{"id":8,"skipped":false,"userSolution":"select distinct first_name from patients group by first_name having count(first_name)=1;","hints":3,"solvedTime":418002,"completedWithoutSkipping":false},{"id":37,"skipped":false,"userSolution":"select day(admission_date) as day_number ,count(patient_id) as number_of_admmisions from admissions\ngroup by day_number order by number_of_admmisions desc;","hints":3,"solvedTime":2443951,"completedWithoutSkipping":true},{"id":38,"skipped":false,"userSolution":"select * from admissions where patient_id =542 group by patient_id having max(admission_date);","hints":2,"solvedTime":108001,"completedWithoutSkipping":true},{"id":40,"skipped":false,"userSolution":"select patient_id, attending_doctor_id , diagnosis from admissions where attending_doctor_id in(1,5,19) and patient_id% 2 =1\nor (attending_doctor_id like '%2%' and length(patient_id)=3);","hints":3,"solvedTime":565003,"completedWithoutSkipping":true},{"id":47,"skipped":false,"userSolution":"select doctors.first_name, doctors.last_name, count(attending_doctor_id)  as admissions_total from admissions join doctors on doctors.doctor_id= admissions.attending_doctor_id  group by first_name, last_name; ;","hints":3,"solvedTime":894003,"completedWithoutSkipping":true},{"id":48,"skipped":false,"userSolution":"select doctors.doctor_id ,concat(doctors.first_name,' ',doctors.last_name) as full_name,\n  min(admissions.admission_date) as first_admission_date , max(admissions.admission_date) as last_admission_date from\n   doctors join admissions on doctors.doctor_id = admissions.attending_doctor_id group by doctors.doctor_id, full_name","hints":2,"solvedTime":453002,"completedWithoutSkipping":true},{"id":50,"skipped":false,"userSolution":"select count(patients.patient_id) as patient_count , province_names.province_name\n from patients join province_names on patients.province_id = province_names.province_id \n group by province_names.province_name order by patient_count desc;","hints":1,"solvedTime":306002,"completedWithoutSkipping":true},{"id":51,"skipped":false,"userSolution":"select concat(patients.first_name, ' ',patients.last_name)as patient_name, admissions.diagnosis , concat(doctors.first_name\n,' ', doctors.last_name) as  doctor_name from patients inner join admissions on\npatients.patient_id = admissions.patient_id inner join doctors on doctors.doctor_id = admissions.attending_doctor_id;","hints":1,"solvedTime":564004,"completedWithoutSkipping":true},{"id":12,"skipped":false,"userSolution":"select \n(select count(*) from patients where gender ='M') as male_count ,\n(select count(*) from patients where gender ='F') as female_count ;","hints":1,"solvedTime":313000,"completedWithoutSkipping":true},{"id":54,"skipped":false,"userSolution":"select first_name, last_name, count(*) as num_of_duplicates from patients  group by first_name, last_name having\ncount(*)>1;","hints":3,"solvedTime":1225979,"completedWithoutSkipping":true},{"id":55,"skipped":false,"userSolution":"select concat(first_name,' ',last_name) as patient_name ,\nround(height/30.48,1)as height_feet, round(weight *  2.205,0) as weight_pound , \nbirth_date,\n(case when gender ='M' then 'MALE' else  'FEMALE' end) as gender\n\nfrom patients \n\n/*\n\nselect concat(first_name,' ',last_name) as full_name,\nround(height/30.48,1) as height_feet, round(weight * 2.205,0) as weight_pound,\nbirth_date,\n(case when gender ='F' then 'Female' else 'Male' end) as gender\nfrom patients\n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","hints":2,"solvedTime":3209970,"completedWithoutSkipping":true},{"id":70,"skipped":false,"userSolution":"SELECT patients.patient_id, patients.first_name, patients.last_name from patients\nleft join  admissions on patients.patient_id= admissions.patient_id where \nadmissions.patient_id is  null;","hints":3,"solvedTime":874000,"completedWithoutSkipping":true},{"id":17,"skipped":false,"userSolution":"select count(*)as patients_in_group, floor(weight/10) * 10 as weight_group from patients \n  group by weight_group order by weight_group desc ;\n\n/*\n\nSELECT (weight / 10) * 10 AS weight_group, COUNT(*) AS patients_in_this_weight_group\nFROM patients\nGROUP BY weight_group\nORDER BY weight_group DESC;\n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","hints":3,"solvedTime":860017,"completedWithoutSkipping":true},{"id":18,"skipped":false,"userSolution":"SELECT patient_id,weight,height,  \n(case when ( weight/((height* 0.01) * height*0.01)) >=30 then 1 else 0 end) as  isObese \nfrom patients\n\n\n/*\n \n select patient_id,weight,height,\n(case when (weight/((height*0.01)*height*0.01))>30 then 1 else 0 end) as\nisObese\nfrom patients\n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","hints":1,"solvedTime":735974,"completedWithoutSkipping":true},{"id":19,"skipped":false,"userSolution":"select patients.patient_id, patients.first_name, patients.last_name , doctors.specialty\nfrom patients inner join admissions on patients.patient_id= admissions.patient_id\ninner join doctors on doctors.doctor_id = admissions.attending_doctor_id\nwhere admissions.diagnosis = 'Epilepsy' and doctors.first_name='Lisa';\n\n/*\n \n select patient_id,weight,height,\n(case when (weight/((height*0.01)*height*0.01))>30 then 1 else 0 end) as\nisObese\nfrom patients\n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","hints":1,"solvedTime":287001,"completedWithoutSkipping":true},{"id":20,"skipped":false,"userSolution":"select distinct patients.patient_id , concat(patients.patient_id,len(patients.last_name),\n                                     year(birth_date)) as temp_password \n                                     from patients right join admissions on\n                                     patients.patient_id = admissions.patient_id","hints":2,"solvedTime":439001,"completedWithoutSkipping":true},{"id":21,"skipped":false,"userSolution":"select \n (case when patient_id% 2 =0 then 'Yes'\n else 'No'\n end) as has_insurance,\n sum(case when patient_id % 2 = 0 then 10 else 50 end) as cost_after_insurance\n from admissions\n group by \n has_insurance","hints":3,"solvedTime":496039,"completedWithoutSkipping":true},{"id":24,"skipped":false,"userSolution":"select province_names.province_name from patients join province_names on\n patients.province_id = province_names.province_id\n group by province_name having\n count(Case when patients.gender ='M' then 1 end ) > count(Case when patients.gender ='F' then 1 end )","hints":3,"solvedTime":914005,"completedWithoutSkipping":true},{"id":25,"skipped":false,"userSolution":"select * from patients where\n first_name like '__r%' and gender ='F' and\n weight between 60 and 80 and\n patient_id% 2!=0 and city='Kingston'","hints":2,"solvedTime":601004,"completedWithoutSkipping":true},{"id":26,"skipped":false,"userSolution":"select concat(round(sum\n(case when gender='M' then 1 else 0 end ) * 100.0 / count(*),2),'%') from patients\n               \n                \n\n \n/*\nSELECT CONCAT(ROUND(SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2), '%')\nFROM patients;\n \n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","hints":2,"solvedTime":8761778,"completedWithoutSkipping":true},{"id":44,"skipped":false,"userSolution":"select admission_date, \n count(admission_date) as admission_day,\n count(admission_date) - lag(count(discharge_date)) over (order by admission_date) as addmission_count_change from admissions \n group by admission_date;","hints":3,"solvedTime":1537188,"completedWithoutSkipping":true},{"id":53,"skipped":false,"userSolution":"select province_name from province_names order by \n case when province_name ='Ontario' then 0  else 1 end, province_name;","hints":3,"solvedTime":486944,"completedWithoutSkipping":true},{"id":69,"skipped":false,"userSolution":"select doctors.doctor_id, concat(doctors.first_name,' ',doctors.last_name) as doctor_name,\n doctors.specialty, (year(admissions.admission_date)) as selected_year , count(doctors.doctor_id) as total_admissions\n from doctors  left join admissions on doctors.doctor_id = admissions.attending_doctor_id\n group by doctor_id, doctor_name, specialty, selected_year;","hints":3,"solvedTime":734997,"completedWithoutSkipping":true},{"id":56,"skipped":false,"userSolution":"select category_name , description from categories","hints":1,"solvedTime":31001,"completedWithoutSkipping":true},{"id":57,"skipped":false,"userSolution":"select contact_name, address, city from customers where country not in ('Germany','Mexico',\n                                                                     'Spain')","hints":3,"solvedTime":496998,"completedWithoutSkipping":true},{"id":58,"skipped":false,"userSolution":"select order_date, shipped_date, customer_id, freight from orders\n where order_date='2018-02-26';","hints":1,"solvedTime":100999,"completedWithoutSkipping":true},{"id":59,"skipped":false,"userSolution":"select employee_id , order_id, customer_id, required_date , shipped_date\nfrom orders where shipped_date > required_date;","hints":2,"solvedTime":222010,"completedWithoutSkipping":true},{"id":60,"skipped":false,"userSolution":"select order_id from orders where mod(order_id,2)=0;","hints":3,"solvedTime":153014,"completedWithoutSkipping":true},{"id":61,"skipped":false,"userSolution":"select city, company_name, contact_name from customers where city  like '%L%' order by contact_name;","hints":3,"solvedTime":162002,"completedWithoutSkipping":true},{"id":62,"skipped":false,"userSolution":"select company_name, contact_name, fax from customers where fax is not null;","hints":1,"solvedTime":118001,"completedWithoutSkipping":true},{"id":63,"skipped":false,"userSolution":"select first_name, last_name,\n max(hire_date) as hire_date from employees;","hints":3,"solvedTime":294001,"completedWithoutSkipping":true},{"id":64,"skipped":false,"userSolution":"select round(avg(unit_price),2), sum(units_in_stock) as total_stock, sum(discontinued) as discontinued from  products","hints":2,"solvedTime":358012,"completedWithoutSkipping":true},{"id":65,"skipped":false,"userSolution":"select products.product_name, suppliers.company_name, categories.category_name\nfrom categories inner join products on categories.category_id= products.category_id\ninner join suppliers on  products.supplier_id= suppliers.supplier_id","hints":1,"solvedTime":230002,"completedWithoutSkipping":true},{"id":66,"skipped":false,"userSolution":"select categories.category_name , round(avg(products.unit_price),2)as average_unit_price\n from products join categories on categories.category_id= products.category_id\n group by categories.category_name","hints":2,"solvedTime":258001,"completedWithoutSkipping":true},{"id":67,"skipped":false,"userSolution":"select city,company_name,contact_name,'Customers' as relationship from customers\nunion\nselect city, company_name, contact_name, 'Suppliers' as relationship from suppliers","hints":3,"solvedTime":425999,"completedWithoutSkipping":true},{"id":68,"skipped":false,"userSolution":"select employees.first_name, employees.last_name, count(orders.order_id)as num_orders,\n (case when orders.shipped_date <= orders.required_date then 'On Time' else 'Late' end) \n as shipped \n from employees left join orders on  employees.employee_id = orders.employee_id\n group by employees.first_name, employees.last_name , shipped\n order by employees.last_name, employees.first_name,   num_orders desc;\n \n \n \n \n \n /*SELECT\n    first_name,\n    last_name,\n    COUNT(order_id) AS num_orders,\n    CASE\n        WHEN shipped_date <= required_date THEN 'On Time'\n        ELSE 'Late'\n    END AS Shipped\nFROM\n    employees\nJOIN\n    orders\nON\n    employees.employee_id = orders.employee_id\nGROUP BY\n    employees.employee_id,\n    first_name,\n    last_name,\n    Shipped\nORDER BY\n    last_name,\n    first_name,\n    num_orders DESC;","hints":3,"solvedTime":1957003,"completedWithoutSkipping":true},{"id":71,"skipped":false,"userSolution":"select year(orders.order_date) as order_year , round(sum(products.unit_price * order_details.quantity * order_details.discount),2)as discount_amount\n from orders inner join order_details\n on orders.order_id = order_details.order_id\n inner join products on order_details.product_id = products.product_id\n group by order_year\n order by order_year desc","hints":3,"solvedTime":1195785,"completedWithoutSkipping":true}],"autoRun":false,"autocomplete":true,"editorFontSize":16,"persistEditorText":false,"editorText":"SELECT * FROM patients\n\n/*\n  Start by selecting a question by pressing 'Start' or 'View All Questions'.\n  Use the resources and information about the database from the left panel to help.\n  Press the run button to execute the query.\n  Question is automatically validated every time you execute the query.\n  Make your output match the expected output.\n \n \n  Keybinds:\n    [ctrl + enter]: Execute the SQL\n    [ctrl + q]: Auto-format the SQL\n*/","queryTimes":[{"id":0,"time":112000},{"id":1,"time":142000},{"id":2,"time":108000},{"id":3,"time":75000},{"id":4,"time":110999},{"id":5,"time":76999},{"id":6,"time":95000},{"id":23,"time":108001},{"id":33,"time":77000},{"id":34,"time":67000},{"id":35,"time":30001},{"id":41,"time":79132551},{"id":42,"time":163002},{"id":32,"time":233002},{"id":45,"time":772004},{"id":46,"time":190003},{"id":7,"time":282999},{"id":8,"time":418002},{"id":9,"time":901661},{"id":10,"time":452351},{"id":11,"time":285000},{"id":12,"time":313000},{"id":13,"time":207001},{"id":14,"time":438995},{"id":15,"time":255000},{"id":16,"time":392999},{"id":22,"time":543001},{"id":27,"time":585000},{"id":28,"time":455947},{"id":30,"time":539994},{"id":31,"time":841384},{"id":37,"time":2443951},{"id":38,"time":108001},{"id":40,"time":565003},{"id":47,"time":894003},{"id":48,"time":453002},{"id":50,"time":306002},{"id":51,"time":564004},{"id":54,"time":1225979},{"id":55,"time":3209970},{"id":24,"time":914005},{"id":17,"time":860017},{"id":70,"time":874000},{"id":18,"time":735974},{"id":19,"time":287001},{"id":20,"time":439001},{"id":21,"time":496039},{"id":25,"time":601004},{"id":26,"time":8761778},{"id":69,"time":734997},{"id":44,"time":1537188},{"id":53,"time":486944},{"id":56,"time":31001},{"id":57,"time":496998},{"id":58,"time":100999},{"id":59,"time":222010},{"id":60,"time":153014},{"id":61,"time":162002},{"id":62,"time":118001},{"id":63,"time":294001},{"id":64,"time":358012},{"id":65,"time":230002},{"id":66,"time":258001},{"id":67,"time":425999},{"id":68,"time":1957003},{"id":71,"time":1195785}],"filterState":{"selectedKeywordFilter":"ALL","selectedDifficultyFilter":"ALL","selectedCompletedFilter":"ALL","selectedDatabaseFilter":"Hospital"}}